/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AnswerGame,
  AnswerGameInterface,
} from "../../contracts/AnswerGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_answerToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "DailyLimitReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "questionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "questionText",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "difficulty",
        type: "uint256",
      },
    ],
    name: "QuestionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "questionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isCorrect",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "QuestionAnswered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "DAILY_ANSWER_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "questionText",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "correctAnswer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "difficulty",
        type: "uint256",
      },
    ],
    name: "addQuestion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "answerToken",
    outputs: [
      {
        internalType: "contract AnswerToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "answerIndex",
        type: "uint256",
      },
    ],
    name: "getEncryptedAnswer",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "answerIndex",
        type: "uint256",
      },
    ],
    name: "getEncryptedResult",
    outputs: [
      {
        internalType: "euint32",
        name: "encryptedIsCorrect",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedReward",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "questionId",
        type: "uint256",
      },
    ],
    name: "getQuestion",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "questionText",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "options",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "correctAnswer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difficulty",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct AnswerGame.Question",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getRandomQuestions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "questionText",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "options",
            type: "string[]",
          },
          {
            internalType: "uint256",
            name: "correctAnswer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difficulty",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct AnswerGame.Question[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getUserAnswers",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "questionId",
            type: "uint256",
          },
          {
            internalType: "euint32",
            name: "encryptedAnswer",
            type: "bytes32",
          },
          {
            internalType: "euint32",
            name: "encryptedIsCorrect",
            type: "bytes32",
          },
          {
            internalType: "euint32",
            name: "encryptedReward",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "isCorrect",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct AnswerGame.UserAnswer[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalAnswered",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "correctAnswers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dailyAnswers",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastAnswerDate",
            type: "uint256",
          },
        ],
        internalType: "struct AnswerGame.UserStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leaderboard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "questionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "questions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "questionText",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "correctAnswer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "difficulty",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetDailyLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_leaderboard",
        type: "address",
      },
    ],
    name: "setLeaderboard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "questionId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "encryptedAnswer",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "questionId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "plaintextAnswer",
        type: "uint32",
      },
    ],
    name: "submitAnswerMock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "updateAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userAnswers",
    outputs: [
      {
        internalType: "uint256",
        name: "questionId",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "encryptedAnswer",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedIsCorrect",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedReward",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isCorrect",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStats",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAnswered",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "correctAnswers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dailyAnswers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastAnswerDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "answerIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decryptedAnswer",
        type: "uint256",
      },
    ],
    name: "verifyAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b506040516131f43803806131f483398101604081905261002e916101d5565b6101a86100cc604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b5f80546001600160a01b039092166001600160a01b03199283161790556001805490911633179055610202565b5f602082840312156101e5575f5ffd5b81516001600160a01b03811681146101fb575f5ffd5b9392505050565b612fe58061020f5f395ff3fe608060405234801561000f575f5ffd5b506004361061018f575f3560e01c8063928c0a5e116100dd578063e2f273bd11610088578063f72a7b9d11610063578063f72a7b9d146103fe578063f851a44014610411578063faf99c8714610424575f5ffd5b8063e2f273bd146103c5578063eb56b740146103d8578063f1a2de72146103eb575f5ffd5b8063d5a9400e116100b8578063d5a9400e14610395578063da1f12ab1461039d578063db88176f146103a5575f5ffd5b8063928c0a5e1461036757806396d213dd1461037a5780639f7a0ef114610382575f5ffd5b80632e8ff5631161013d5780634e43603a116101185780634e43603a1461028f57806385f1be8e146102e35780638a65d87414610303575f5ffd5b80632e8ff5631461022357806331b1b9781461024b5780633d04e5321461026f575f5ffd5b80631ec8bb8c1161016d5780631ec8bb8c146101d157806322005b00146101e65780632ddb1c69146101f9575f5ffd5b80631468aa2c146101935780631daf8e88146101af5780631e009f31146101c2575b5f5ffd5b61019c60045481565b6040519081526020015b60405180910390f35b61019c6101bd366004612838565b61046e565b61019c678ac7230489e8000081565b6101e46101df366004612838565b610512565b005b6101e46101f4366004612860565b61069b565b5f5461020b906001600160a01b031681565b6040516001600160a01b0390911681526020016101a6565b610236610231366004612838565b610ae1565b604080519283526020830191909152016101a6565b61025e610259366004612896565b610b8d565b6040516101a69594939291906128db565b61028261027d366004612912565b610c46565b6040516101a69190612942565b6102a261029d3660046129ca565b610e3c565b6040516101a691905f60a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b6102f66102f1366004612896565b610ec0565b6040516101a69190612a93565b61033f6103113660046129ca565b60056020525f9081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016101a6565b6101e4610375366004612ba7565b611240565b61019c600a81565b6101e4610390366004612cad565b6114a0565b6101e4611803565b61271161019c565b6103b86103b3366004612896565b6118b5565b6040516101a69190612ccd565b6101e46103d33660046129ca565b611b4a565b60025461020b906001600160a01b031681565b6101e46103f93660046129ca565b611c33565b6101e461040c366004612cdf565b611d1c565b60015461020b906001600160a01b031681565b610437610432366004612838565b6121d8565b6040805197885260208801969096529486019390935260608501919091521515608084015260a083015260c082015260e0016101a6565b6001600160a01b0382165f9081526006602052604081205482106104d05760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840c2dce6eecae440d2dcc8caf60631b60448201526064015b60405180910390fd5b6001600160a01b0383165f9081526006602052604090208054839081106104f9576104f9612d5b565b905f5260205f2090600702016001015490505b92915050565b6002546001600160a01b031633146105925760405162461bcd60e51b815260206004820152602760248201527f4f6e6c79206c6561646572626f6172642063616e2063616c6c2074686973206660448201527f756e6374696f6e0000000000000000000000000000000000000000000000000060648201526084016104c7565b6001600160a01b0382166105e85760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e7420616464726573730000000000000060448201526064016104c7565b5f81116106375760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016104c7565b5f54604051634d24848760e11b81526001600160a01b0384811660048301526024820184905290911690639a49090e906044015f604051808303815f87803b158015610681575f5ffd5b505af1158015610693573d5f5f3e3d5ffd5b505050505050565b8160045481106106e35760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c5d595cdd1a5bdb881251606a1b60448201526064016104c7565b5f8181526003602052604090206005015460ff166107435760405162461bcd60e51b815260206004820152601660248201527f5175657374696f6e206973206e6f74206163746976650000000000000000000060448201526064016104c7565b46617a69146107945760405162461bcd60e51b815260206004820152601860248201527f4d6f636b206f6e6c79206f6e206c6f63616c20636861696e000000000000000060448201526064016104c7565b335f9081526005602052604090206003810154600a116107f65760405162461bcd60e51b815260206004820152601a60248201527f4461696c7920616e73776572206c696d6974207265616368656400000000000060448201526064016104c7565b5f60035f8681526020019081526020015f206040518060c00160405290815f820154815260200160018201805461082c90612d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461085890612d6f565b80156108a35780601f1061087a576101008083540402835291602001916108a3565b820191905f5260205f20905b81548152906001019060200180831161088657829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015610978578382905f5260205f200180546108ed90612d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461091990612d6f565b80156109645780601f1061093b57610100808354040283529160200191610964565b820191905f5260205f20905b81548152906001019060200180831161094757829003601f168201915b5050505050815260200190600101906108d0565b50505090825250600382015460208201526004820154604082015260059091015460ff16151560609182015281015190915063ffffffff8516145f816109be575f6109d5565b60808301516109d590678ac7230489e80000612db5565b8454909150845f6109e583612dcc565b9091555050600384018054905f6109fb83612dcc565b90915550504260048501558115610a9957600184018054905f610a1d83612dcc565b919050555080846002015f828254610a359190612de4565b90915550505f54604051634d24848760e11b8152336004820152602481018390526001600160a01b0390911690639a49090e906044015f604051808303815f87803b158015610a82575f5ffd5b505af1158015610a94573d5f5f3e3d5ffd5b505050505b60408051831515815260208101839052889133917f4285e0e5287b4a0bab0269586915e38b13c3ec64e64a8482c370d9a31dc1d586910160405180910390a350505050505050565b6001600160a01b0382165f9081526006602052604081205481908310610b405760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840c2dce6eecae440d2dcc8caf60631b60448201526064016104c7565b6001600160a01b0384165f908152600660205260408120805485908110610b6957610b69612d5b565b905f5260205f20906007020190508060020154816003015492509250509250929050565b60036020525f908152604090208054600182018054919291610bae90612d6f565b80601f0160208091040260200160405190810160405280929190818152602001828054610bda90612d6f565b8015610c255780601f10610bfc57610100808354040283529160200191610c25565b820191905f5260205f20905b815481529060010190602001808311610c0857829003601f168201915b50505050600383015460048401546005909401549293909290915060ff1685565b6001600160a01b0383165f908152600660205260409020805460609190808510610cd757604080515f8082526020820190925290610ccd565b610cba6040518060e001604052805f81526020015f81526020015f81526020015f81526020015f151581526020015f81526020015f81525090565b815260200190600190039081610c7f5790505b5092505050610e35565b5f610ce28587612de4565b905081811115610cef5750805b5f610cfa8783612df7565b67ffffffffffffffff811115610d1257610d12612af6565b604051908082528060200260200182016040528015610d7e57816020015b610d6b6040518060e001604052805f81526020015f81526020015f81526020015f81526020015f151581526020015f81526020015f81525090565b815260200190600190039081610d305790505b509050865b82811015610e2e57848181548110610d9d57610d9d612d5b565b5f9182526020918290206040805160e08101825260079093029091018054835260018101549383019390935260028301549082015260038201546060820152600482015460ff1615156080820152600582015460a082015260069091015460c082015282610e0b8a84612df7565b81518110610e1b57610e1b612d5b565b6020908102919091010152600101610d83565b5093505050505b9392505050565b610e696040518060a001604052805f81526020015f81526020015f81526020015f81526020015f81525090565b506001600160a01b03165f90815260056020908152604091829020825160a0810184528154815260018201549281019290925260028101549282019290925260038201546060820152600490910154608082015290565b60605f82118015610ed357506004548211155b610f1f5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420636f756e740000000000000000000000000000000000000060448201526064016104c7565b5f8267ffffffffffffffff811115610f3957610f39612af6565b604051908082528060200260200182016040528015610fa157816020015b610f8e6040518060c001604052805f815260200160608152602001606081526020015f81526020015f81526020015f151581525090565b815260200190600190039081610f575790505b5090505f8367ffffffffffffffff811115610fbe57610fbe612af6565b604051908082528060200260200182016040528015610fe7578160200160208202803683370190505b5090505f5b848110156112375760045460408051426020820152908101839052606001604051602081830303815290604052805190602001205f1c61102c9190612e0a565b82828151811061103e5761103e612d5b565b60200260200101818152505060035f83838151811061105f5761105f612d5b565b602002602001015181526020019081526020015f206040518060c00160405290815f820154815260200160018201805461109890612d6f565b80601f01602080910402602001604051908101604052809291908181526020018280546110c490612d6f565b801561110f5780601f106110e65761010080835404028352916020019161110f565b820191905f5260205f20905b8154815290600101906020018083116110f257829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b828210156111e4578382905f5260205f2001805461115990612d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461118590612d6f565b80156111d05780601f106111a7576101008083540402835291602001916111d0565b820191905f5260205f20905b8154815290600101906020018083116111b357829003601f168201915b50505050508152602001906001019061113c565b50505090825250600382015460208201526004820154604082015260059091015460ff161515606090910152835184908390811061122457611224612d5b565b6020908102919091010152600101610fec565b50909392505050565b6001546001600160a01b031633146112a45760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016104c7565b6002835110156112f65760405162461bcd60e51b815260206004820152601b60248201527f4174206c656173742032206f7074696f6e73207265717569726564000000000060448201526064016104c7565b825182106113465760405162461bcd60e51b815260206004820152601c60248201527f496e76616c696420636f727265637420616e7377657220696e6465780000000060448201526064016104c7565b60018110158015611358575060058111155b6113a45760405162461bcd60e51b815260206004820152601660248201527f446966666963756c7479206d75737420626520312d350000000000000000000060448201526064016104c7565b6004546040805160c08101825282815260208082018881528284018890526060830187905260808301869052600160a084018190525f86815260039093529390912082518155905191929091908201906113fe9082612e72565b506040820151805161141a916002840191602090910190612767565b5060608201516003820155608082015160048083019190915560a0909201516005909101805460ff19169115159190911790558054905f61145a83612dcc565b9190505550807fd2e3647fc837479f6b62a71cf47916be70118af2f2e3a5680d7e5c0a611911418684604051611491929190612f2d565b60405180910390a25050505050565b335f9081526006602052604090205482106114f45760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840c2dce6eecae440d2dcc8caf60631b60448201526064016104c7565b335f90815260066020526040812080548490811061151457611514612d5b565b905f5260205f20906007020190505f60035f835f015481526020019081526020015f206040518060c00160405290815f820154815260200160018201805461155b90612d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461158790612d6f565b80156115d25780601f106115a9576101008083540402835291602001916115d2565b820191905f5260205f20905b8154815290600101906020018083116115b557829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b828210156116a7578382905f5260205f2001805461161c90612d6f565b80601f016020809104026020016040519081016040528092919081815260200182805461164890612d6f565b80156116935780601f1061166a57610100808354040283529160200191611693565b820191905f5260205f20905b81548152906001019060200180831161167657829003601f168201915b5050505050815260200190600101906115ff565b5050509082525060038201546020820152600480830154604083015260059092015460ff161515606091820152820151908401805460ff1916918614918217905590915080156117fc575f8260800151678ac7230489e8000061170a9190612db5565b60068501819055335f90815260056020526040812060010180549293509061173183612dcc565b9091555050335f9081526005602052604081206002018054839290611757908490612de4565b90915550505f54604051634d24848760e11b8152336004820152602481018390526001600160a01b0390911690639a49090e906044015f604051808303815f87803b1580156117a4575f5ffd5b505af11580156117b6573d5f5f3e3d5ffd5b505085546040805160018152602081018690529193503392507f4285e0e5287b4a0bab0269586915e38b13c3ec64e64a8482c370d9a31dc1d586910160405180910390a3505b5050505050565b335f90815260056020526040902061181e6201518042612df7565b8160040154106118705760405162461bcd60e51b815260206004820152601f60248201527f4461696c79206c696d697420616c726561647920726573657420746f6461790060448201526064016104c7565b5f6003820155426004820155604051600a815233907fe08bf5ec0359ff00ff7306d2a54240f6b4970e8ed71e637f2117ab9b246896f99060200160405180910390a250565b6118ec6040518060c001604052805f815260200160608152602001606081526020015f81526020015f81526020015f151581525090565b8160045481106119345760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c5d595cdd1a5bdb881251606a1b60448201526064016104c7565b5f8181526003602052604090206005015460ff166119945760405162461bcd60e51b815260206004820152601660248201527f5175657374696f6e206973206e6f74206163746976650000000000000000000060448201526064016104c7565b60035f8481526020019081526020015f206040518060c00160405290815f82015481526020016001820180546119c990612d6f565b80601f01602080910402602001604051908101604052809291908181526020018280546119f590612d6f565b8015611a405780601f10611a1757610100808354040283529160200191611a40565b820191905f5260205f20905b815481529060010190602001808311611a2357829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015611b15578382905f5260205f20018054611a8a90612d6f565b80601f0160208091040260200160405190810160405280929190818152602001828054611ab690612d6f565b8015611b015780601f10611ad857610100808354040283529160200191611b01565b820191905f5260205f20905b815481529060010190602001808311611ae457829003601f168201915b505050505081526020019060010190611a6d565b50505090825250600382015460208201526004820154604082015260059091015460ff16151560609091015291505b50919050565b6001546001600160a01b03163314611bae5760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016104c7565b6001600160a01b038116611c045760405162461bcd60e51b815260206004820152601560248201527f496e76616c69642061646d696e2061646472657373000000000000000000000060448201526064016104c7565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b03163314611c975760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6044820152603760f91b60648201526084016104c7565b6001600160a01b038116611ced5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6561646572626f6172642061646472657373000000000060448201526064016104c7565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b836004548110611d645760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c5d595cdd1a5bdb881251606a1b60448201526064016104c7565b5f8181526003602052604090206005015460ff16611dc45760405162461bcd60e51b815260206004820152601660248201527f5175657374696f6e206973206e6f74206163746976650000000000000000000060448201526064016104c7565b335f9081526005602090815260408083208151601f87018490048402810184019092528582529291611e1191889188908890819084018382808284375f9201919091525061223492505050565b90505f60035f8981526020019081526020015f206040518060c00160405290815f8201548152602001600182018054611e4990612d6f565b80601f0160208091040260200160405190810160405280929190818152602001828054611e7590612d6f565b8015611ec05780601f10611e9757610100808354040283529160200191611ec0565b820191905f5260205f20905b815481529060010190602001808311611ea357829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020015f905b82821015611f95578382905f5260205f20018054611f0a90612d6f565b80601f0160208091040260200160405190810160405280929190818152602001828054611f3690612d6f565b8015611f815780601f10611f5857610100808354040283529160200191611f81565b820191905f5260205f20905b815481529060010190602001808311611f6457829003601f168201915b505050505081526020019060010190611eed565b50505090825250600382015460208201526004820154604082015260059091015460ff1615156060918201528101519091505f90611fd290612241565b90505f611fe7611fe28584612253565b612281565b90505f8360800151678ac7230489e800006120029190612db5565b90505f61201761201183612241565b8461228d565b8754909150875f61202783612dcc565b9091555050600387018054905f61203d83612dcc565b91905055504287600401819055505f60065f336001600160a01b03166001600160a01b031681526020019081526020015f2080549050905060065f336001600160a01b03166001600160a01b031681526020019081526020015f206040518060e001604052808f81526020018981526020018681526020018481526020015f151581526020014281526020015f815250908060018154018082558091505060019003905f5260205f2090600702015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555060a0820151816005015560c082015181600601555050612157876122bb565b5061216287336122ca565b5061216c846122bb565b5061217784336122ca565b50612181826122bb565b5061218c82336122ca565b50604080515f80825260208201528e9133917f4285e0e5287b4a0bab0269586915e38b13c3ec64e64a8482c370d9a31dc1d586910160405180910390a350505050505050505050505050565b6006602052815f5260405f2081815481106121f1575f80fd5b5f91825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601549497509295509093909260ff9092169187565b5f610e35838360046122dc565b5f61050c8263ffffffff1660046123fc565b5f82612265576122625f612241565b92505b81612276576122735f612241565b91505b610e3583835f6124b9565b5f61050c8260046125b4565b5f8261229f5761229c5f612241565b92505b816122b0576122ad5f612241565b91505b610e3583835f612629565b5f6122c682306126de565b5090565b5f6122d583836126de565b5090919050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90612355908890339089908990600401612f6e565b6020604051808303815f875af1158015612371573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123959190612fad565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156123de575f5ffd5b505af11580156123f0573d5f5f3e3d5ffd5b50505050509392505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb906124719087908790600401612fc4565b6020604051808303815f875af115801561248d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906124b19190612fad565b949350505050565b5f5f82156124cc5750600160f81b6124cf565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163f77f3f1d60e01b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063f77f3f1d906064015b6020604051808303815f875af1158015612586573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125aa9190612fad565b9695505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516307227b9160e21b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690631c89ee44906124719087908790600401612fc4565b5f5f821561263c5750600160f81b61263f565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051630afe14ad60e31b815260048101879052602481018690527fff00000000000000000000000000000000000000000000000000000000000000831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0316906357f0a5689060640161256a565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b15801561274c575f5ffd5b505af115801561275e573d5f5f3e3d5ffd5b50505050505050565b828054828255905f5260205f209081019282156127ab579160200282015b828111156127ab578251829061279b9082612e72565b5091602001919060010190612785565b506122c69291505b808211156122c6575f6127c682826127cf565b506001016127b3565b5080546127db90612d6f565b5f825580601f106127ea575050565b601f0160209004905f5260205f20908101906128069190612809565b50565b5b808211156122c6575f815560010161280a565b80356001600160a01b0381168114612833575f5ffd5b919050565b5f5f60408385031215612849575f5ffd5b6128528361281d565b946020939093013593505050565b5f5f60408385031215612871575f5ffd5b82359150602083013563ffffffff8116811461288b575f5ffd5b809150509250929050565b5f602082840312156128a6575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b85815260a060208201525f6128f360a08301876128ad565b6040830195909552506060810192909252151560809091015292915050565b5f5f5f60608486031215612924575f5ffd5b61292d8461281d565b95602085013595506040909401359392505050565b602080825282518282018190525f918401906040840190835b818110156129bf5783518051845260208101516020850152604081015160408501526060810151606085015260808101511515608085015260a081015160a085015260c081015160c08501525060e08301925060208401935060018101905061295b565b509095945050505050565b5f602082840312156129da575f5ffd5b610e358261281d565b805182525f602082015160c06020850152612a0160c08501826128ad565b90506040830151848203604086015281815180845260208401915060208160051b8501016020840193505f5b82811015612a5e57601f19868303018452612a498286516128ad565b60209586019594909401939150600101612a2d565b50606087015160608901526080870151608089015260a08701519450612a8860a089018615159052565b979650505050505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015612aea57603f19878603018452612ad58583516129e3565b94506020938401939190910190600101612ab9565b50929695505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612b3357612b33612af6565b604052919050565b5f82601f830112612b4a575f5ffd5b813567ffffffffffffffff811115612b6457612b64612af6565b612b77601f8201601f1916602001612b0a565b818152846020838601011115612b8b575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f5f60808587031215612bba575f5ffd5b843567ffffffffffffffff811115612bd0575f5ffd5b612bdc87828801612b3b565b945050602085013567ffffffffffffffff811115612bf8575f5ffd5b8501601f81018713612c08575f5ffd5b803567ffffffffffffffff811115612c2257612c22612af6565b8060051b612c3260208201612b0a565b9182526020818401810192908101908a841115612c4d575f5ffd5b6020850192505b83831015612c9357823567ffffffffffffffff811115612c72575f5ffd5b612c818c602083890101612b3b565b83525060209283019290910190612c54565b979a97995050505060408601359560600135949350505050565b5f5f60408385031215612cbe575f5ffd5b50508035926020909101359150565b602081525f610e3560208301846129e3565b5f5f5f5f60608587031215612cf2575f5ffd5b8435935060208501359250604085013567ffffffffffffffff811115612d16575f5ffd5b8501601f81018713612d26575f5ffd5b803567ffffffffffffffff811115612d3c575f5ffd5b876020828401011115612d4d575f5ffd5b949793965060200194505050565b634e487b7160e01b5f52603260045260245ffd5b600181811c90821680612d8357607f821691505b602082108103611b4457634e487b7160e01b5f52602260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b808202811582820484141761050c5761050c612da1565b5f60018201612ddd57612ddd612da1565b5060010190565b8082018082111561050c5761050c612da1565b8181038181111561050c5761050c612da1565b5f82612e2457634e487b7160e01b5f52601260045260245ffd5b500690565b601f821115612e6d57805f5260205f20601f840160051c81016020851015612e4e5750805b601f840160051c820191505b818110156117fc575f8155600101612e5a565b505050565b815167ffffffffffffffff811115612e8c57612e8c612af6565b612ea081612e9a8454612d6f565b84612e29565b6020601f821160018114612ed2575f8315612ebb5750848201515b5f19600385901b1c1916600184901b1784556117fc565b5f84815260208120601f198516915b82811015612f015787850151825560209485019460019092019101612ee1565b5084821015612f1e57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b604081525f612f3f60408301856128ad565b90508260208301529392505050565b60548110612f6a57634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f612f9560808301856128ad565b9050612fa46060830184612f4e565b95945050505050565b5f60208284031215612fbd575f5ffd5b5051919050565b82815260408101610e356020830184612f4e56fea164736f6c634300081b000a";

type AnswerGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnswerGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnswerGame__factory extends ContractFactory {
  constructor(...args: AnswerGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _answerToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_answerToken, overrides || {});
  }
  override deploy(
    _answerToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_answerToken, overrides || {}) as Promise<
      AnswerGame & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AnswerGame__factory {
    return super.connect(runner) as AnswerGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnswerGameInterface {
    return new Interface(_abi) as AnswerGameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AnswerGame {
    return new Contract(address, _abi, runner) as unknown as AnswerGame;
  }
}
